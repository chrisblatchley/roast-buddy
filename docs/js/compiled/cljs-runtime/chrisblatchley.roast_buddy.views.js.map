{"version":3,"sources":["chrisblatchley/roast_buddy/views.cljs"],"mappings":"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","names":["chrisblatchley.roast-buddy.views/past-roasts","roasts","G__43920","re-frame.core/subscribe","cljs.core/deref","cljs.core/empty?","cljs.core.map","p__43921","map__43922","cljs.core/PROTOCOL_SENTINEL","cljs.core.apply","cljs.core/hash-map","cljs.core.get","name","roast","G__43924","re-frame.core/dispatch","p__43925","map__43926","chrisblatchley.roast-buddy.views/data-rows","data","p__43928","map__43929","time","temp","ror","chrisblatchley.roast-buddy.views/temperature-component","p1__43931#","temperature","cljs.core.atom","cljs.core/reset!","G__43932","chrisblatchley.roast-buddy.views/current-roast","p1__43933#","G__43934","G__43935","G__43936","cljs.core/Keyword","js/Error","chrisblatchley.roast-buddy.roasts/status","G__43937","G__43938","G__43939","chrisblatchley.roast-buddy.views/main-panel"],"sourcesContent":["(ns chrisblatchley.roast-buddy.views\n    (:require\n     [re-frame.core :as re-frame]\n     [chrisblatchley.roast-buddy.subs :as subs]\n     [chrisblatchley.roast-buddy.roasts :as roasts]\n     ))\n\n(defn past-roasts []\n  (let [roasts (re-frame/subscribe [::subs/roasts])]\n    [:section\n     [:h2 \"my roasts\"]\n     (if (empty? @roasts)\n       [:h3 \"nothing yet!\"]\n       [:ul (map (fn [{:keys [name] :as roast}]\n                   [:a {:href \"#\" :on-click #(re-frame/dispatch [:load-roast roast])} [:li name]]) @roasts)])]))\n\n(defn- data-rows\n  [{:keys [data]}]\n  [:table\n   [:tbody\n    [:tr\n     [:th \"time\"]\n     [:th \"temp\"]\n     [:th \"RoR\"]]\n    (map (fn [{:keys [time temp ror]}]\n           [:tr\n            [:td time]\n            [:td temp]\n            [:td ror]]) data)]])\n\n(defn- temperature-component []\n  (let [temperature (atom 0)]\n    [:div\n     [:input {:type \"number\"\n              :on-change #(reset! temperature (-> % .-target .-value))}]\n     [:button {:on-click #(re-frame/dispatch [:record-temp @temperature])}\n      \"record temp\"]]))\n\n(defn current-roast []\n  (let [roast (re-frame/subscribe [::subs/current-roast])]\n    [:section\n     [:h2 \"current roast: \"\n      [:input {:type \"text\"\n               :on-change #(re-frame/dispatch [:update-name, (-> % .-target .-value)])\n               :placeholder (:name @roast)}]]\n     [:h3 (case (roasts/status @roast)\n            :ready [:button {:on-click #(re-frame/dispatch [:start-roast (:name @roast)])} \"start\"]\n            :started [:button {:on-click #(re-frame/dispatch [:finish-roast :done])} \"stop\"]\n            :finished [:button {:on-click #(re-frame/dispatch [:new-roast :default])} \"new\"])]            \n     (data-rows @roast)\n     (temperature-component)]))\n\n(defn main-panel []\n  [:div\n   [:h1 \"Welcome to Roast-buddy!\"]\n   [:div {:style {:display \"flex\"}}\n    (past-roasts)\n    (current-roast)]])\n\n;; (:roasts @re-frame.db/app-db)"]}
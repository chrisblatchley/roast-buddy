{"version":3,"sources":["chrisblatchley/roast_buddy/events.cljs"],"mappings":";;;;;AAMA,AAAA,AAACA,AAEA,AAAKC,AAAEA;AAAP,AACEC;;AAEH,AAAA,AAACF,AAEA,AAAKG,AAAGF;AAAR,AACE,AAAA,AAACG,AAAMD,AAAkB,AAAA,AAACE;;AAE7B,AAAA,AAACL,AAEA,AAAAM,AAAKH;AAAL,AAAA,AAAAI,AAAAD;AAAA,AAAAE,AAAAD,AAAA,AAAA,AAASN;AAAT,AAAAO,AAAAD,AAAA,AAAA,AAAWE;AAAX,AACE,AAAA,AAACL,AAAMD,AAAkBM;;AAE5B,AAAA,AAACT,AAEA,AAAAU,AAAKP;AAAL,AAAA,AAAAQ,AAAAD;AAAA,AAAAF,AAAAG,AAAA,AAAA,AAASV;AAAT,AAAAO,AAAAG,AAAA,AAAA,AAAWC;AAAX,AACE,AAAMC,AAAU,AAACR,AAAoBO;AAArC,AACMT,AACA,AAAA,AAACC,AAAqBS;;AAE/B,AAAA,AAACb,AAEA,AAAAc,AAAKX;AAAL,AAAA,AAAAY,AAAAD;AAAA,AAAAN,AAAAO,AAAA,AAAA,AAASd;AAAT,AAAAO,AAAAO,AAAA,AAAA,AAAWH;AAAX,AACE,AAAA,AAAA,AAAA,AAACI,AAASb,AAA0BS;;AAEvC,AAAA,AAACZ,AAEA,AAAAiB,AAAKd;AAAL,AAAA,AAAAe,AAAAD;AAAA,AAAAT,AAAAU,AAAA,AAAA,AAASjB;AAAT,AAAAO,AAAAU,AAAA,AAAA,AAAWC;AAAX,AACE,AAAA,AAAA,AAAA,AAAAC,AAACC,AAAUlB;AAAX,AAAgC,AAAAiB,AAACE,AAAqBH;;;AAEzD,AAAA,AAACnB,AAEA,AAAAuB,AAAKpB;AAAL,AAAA,AAAAqB,AAAAD;AAAA,AAAAf,AAAAgB,AAAA,AAAA,AAASvB;AAAT,AAAAO,AAAAgB,AAAA,AAAA,AAAWvB;AAAX,AACE,AAAMwB,AAAe,AAACC,AAAoB,AAAA,AAAgBvB;AAA1D,AACMA,AACA,AAAA,AAAA,AAACkB,AAAoBM,AAAKF,AAC1B,AAAA,AAAA,AAACJ,AAA2BI","names":["re_frame.core.reg_event_db","_","chrisblatchley.roast-buddy.db/default-db","db","cljs.core.assoc","chrisblatchley.roast-buddy.roasts/create-roast","p__43745","vec__43747","cljs.core.nth","roast","p__43751","vec__43752","name","new-roast","p__43757","vec__43759","cljs.core/assoc-in","p__43763","vec__43765","temp","p1__43762#","cljs.core.update_in","chrisblatchley.roast-buddy.roasts/record-temp","p__43770","vec__43772","finished-roast","chrisblatchley.roast-buddy.roasts/finish-roast","cljs.core/conj"],"sourcesContent":["(ns chrisblatchley.roast-buddy.events\n  (:require\n   [re-frame.core :as re-frame]\n   [chrisblatchley.roast-buddy.db :as db]\n   [chrisblatchley.roast-buddy.roasts :as roasts]))\n\n(re-frame/reg-event-db\n ::initialize-db\n (fn [_ _]\n   db/default-db))\n\n(re-frame/reg-event-db\n :new-roast\n (fn [db _]\n   (assoc db :current-roast (roasts/create-roast \"default\"))))\n\n(re-frame/reg-event-db\n :load-roast\n (fn [db [_ roast]]\n   (assoc db :current-roast roast)))\n\n(re-frame/reg-event-db\n :start-roast\n (fn [db [_ name]]\n   (let [new-roast (roasts/create-roast name)]\n     (-> db\n         (assoc :current-roast new-roast)))))\n\n(re-frame/reg-event-db\n :update-name\n (fn [db [_ name]]\n   (assoc-in db [:current-roast :name] name)))\n\n(re-frame/reg-event-db\n :record-temp\n (fn [db [_ temp]]\n   (update-in db [:current-roast] #(roasts/record-temp % temp))))\n\n(re-frame/reg-event-db\n :finish-roast\n (fn [db [_ _]]\n   (let [finished-roast (roasts/finish-roast (:current-roast db))]\n     (-> db\n         (update-in [:roasts] conj finished-roast)\n         (update-in [:current-roast] finished-roast)))))"]}